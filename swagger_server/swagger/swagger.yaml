openapi: 3.0.1
info:
  title: User Management Service
  description: This is an API for managing users.
  version: 1.0.0
servers:
- url: http://localhost:5000/api
tags:
- name: user
  description: Operations related to users
paths:
  /users:
    get:
      tags:
      - user
      summary: List all users
      description: Returns a list of users
      operationId: users_get
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                x-content-type: application/json
      x-openapi-router-controller: swagger_server.controllers.user_controller
    post:
      tags:
      - user
      summary: Create a new user
      description: Creates a new user with the provided data
      operationId: users_post
      requestBody:
        description: User object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: User created
          content: {}
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /users/{userId}:
    get:
      tags:
      - user
      summary: Find user by ID
      description: Returns a single user
      operationId: users_user_id_get
      parameters:
      - name: userId
        in: path
        description: ID of user to return
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "404":
          description: User not found
          content: {}
      x-openapi-router-controller: swagger_server.controllers.user_controller
    put:
      tags:
      - user
      summary: Update an existing user
      description: Updates an existing user identified by the ID
      operationId: users_user_id_put
      parameters:
      - name: userId
        in: path
        description: ID of user to update
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: User updated
          content: {}
        "404":
          description: User not found
          content: {}
      x-codegen-request-body-name: body
      x-openapi-router-controller: swagger_server.controllers.user_controller
    delete:
      tags:
      - user
      summary: Delete a user
      description: Deletes a user identified by ID
      operationId: users_user_id_delete
      parameters:
      - name: userId
        in: path
        description: ID of the user to delete
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: User deleted
          content: {}
        "404":
          description: User not found
          content: {}
      x-openapi-router-controller: swagger_server.controllers.user_controller
components:
  schemas:
    User:
      required:
      - email
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
          format: email
      example:
        name: name
        id: 0
        email: ""
x-original-swagger-version: "2.0"

