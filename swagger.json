{
    "swagger": "2.0",
    "info": {
      "description": "This is an API for managing users.",
      "version": "1.0.0",
      "title": "User Management Service"
    },
    "host": "localhost:5000",
    "basePath": "/api",
    "tags": [
      {
        "name": "user",
        "description": "Operations related to users"
      }
    ],
    "schemes": ["http"],
    "paths": {
      "/users": {
        "get": {
          "tags": ["user"],
          "summary": "List all users",
          "description": "Returns a list of users",
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        },
        "post": {
          "tags": ["user"],
          "summary": "Create a new user",
          "description": "Creates a new user with the provided data",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "User object that needs to be added",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "201": {
              "description": "User created"
            }
          }
        }
      },
      "/users/{userId}": {
        "get": {
          "tags": ["user"],
          "summary": "Find user by ID",
          "description": "Returns a single user",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "type": "integer",
              "format": "int64",
              "description": "ID of user to return"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "put": {
          "tags": ["user"],
          "summary": "Update an existing user",
          "description": "Updates an existing user identified by the ID",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "type": "integer",
              "description": "ID of user to update"
            },
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User updated"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "delete": {
          "tags": ["user"],
          "summary": "Delete a user",
          "description": "Deletes a user identified by ID",
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "type": "integer",
              "description": "ID of the user to delete"
            }
          ],
          "responses": {
            "200": {
              "description": "User deleted"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "required": ["name", "email"],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      }
    }
  }